\contentsline {chapter}{Contents}{i}{section*.1}
\contentsline {chapter}{Preface}{1}{chapter*.5}
\contentsline {chapter}{\numberline {1}Motivation and Background}{3}{chapter.1}
\contentsline {paragraph}{With apologies to Italo Calvino}{3}{section*.6}
\contentsline {section}{\numberline {1.1}Where are we}{4}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}The concurrency squeeze: from the hardware up, from the web down}{4}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}Ubiquity of robust, high-performance virtual machines}{5}{subsection.1.1.2}
\contentsline {subsection}{\numberline {1.1.3}Advances in functional programming, monads and the awkward squad}{6}{subsection.1.1.3}
\contentsline {section}{\numberline {1.2}Where are we going}{10}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}A functional web}{10}{subsection.1.2.1}
\contentsline {subsection}{\numberline {1.2.2}DSL-based design}{12}{subsection.1.2.2}
\contentsline {section}{\numberline {1.3}How are we going to get there}{13}{section.1.3}
\contentsline {subsection}{\numberline {1.3.1}Leading by example}{13}{subsection.1.3.1}
\contentsline {subsubsection}{Our toy language}{13}{section*.7}
\contentsline {paragraph}{Abstract syntax}{13}{section*.8}
\contentsline {paragraph}{A simple-minded representation}{14}{section*.9}
\contentsline {paragraph}{Type parametrization and quotation}{14}{section*.10}
\contentsline {paragraph}{Some syntactic sugar}{15}{section*.11}
\contentsline {paragraph}{Digression: complexity management principle}{16}{section*.12}
\contentsline {paragraph}{Concrete syntax}{16}{section*.13}
\contentsline {paragraph}{Translating concrete syntax to abstract syntax}{17}{section*.14}
\contentsline {paragraph}{Structural equivalence and Relations or What makes abstract syntax abstract}{17}{section*.15}
\contentsline {paragraph}{Evaluation -- aka operational semantics}{18}{section*.16}
\contentsline {chapter}{\numberline {2}Toolbox}{21}{chapter.2}
\contentsline {section}{\numberline {2.1}Introduction to notation and terminology}{21}{section.2.1}
\contentsline {section}{\numberline {2.2}Introduction to core design patterns}{21}{section.2.2}
\contentsline {section}{\numberline {2.3}Variations in presentation}{21}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}A little history}{21}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}A little more history}{22}{subsection.2.3.2}
\contentsline {subsubsection}{Intuition: Monad as container}{23}{section*.17}
\contentsline {paragraph}{Shape of the container}{23}{section*.18}
\contentsline {paragraph}{Putting things into the container}{23}{section*.19}
\contentsline {paragraph}{Flattening nested containers}{23}{section*.20}
\contentsline {subsubsection}{Preserving connection to existing structure: Monad as generalization of monoid}{23}{section*.21}
\contentsline {subsubsection}{Decomposition of monad requirements}{24}{section*.22}
\contentsline {subsubsection}{A categorical way to look at monads}{24}{section*.23}
\contentsline {chapter}{\numberline {3}An IO-monad for http streams}{27}{chapter.3}
\contentsline {section}{\numberline {3.1}Code first, questions later}{27}{section.3.1}
\contentsline {subsection}{\numberline {3.1.1}An HTTP-request processor}{27}{subsection.3.1.1}
\contentsline {subsection}{\numberline {3.1.2}What we did}{27}{subsection.3.1.2}
\contentsline {section}{\numberline {3.2}Synchrony, asynchrony and buffering}{27}{section.3.2}
\contentsline {section}{\numberline {3.3}State, statelessness and continuations}{27}{section.3.3}
\contentsline {chapter}{\numberline {4}Parsing requests, monadically}{29}{chapter.4}
\contentsline {section}{\numberline {4.1}Obligatory parsing monad}{29}{section.4.1}
\contentsline {section}{\numberline {4.2}Your parser combinators are showing}{29}{section.4.2}
\contentsline {section}{\numberline {4.3}EBNF and why higher levels of abstraction are better}{29}{section.4.3}
\contentsline {chapter}{\numberline {5}The domain model as abstract syntax}{31}{chapter.5}
\contentsline {section}{\numberline {5.1}Our abstract syntax}{31}{section.5.1}
\contentsline {section}{\numberline {5.2}Our application domain model}{31}{section.5.2}
\contentsline {section}{\numberline {5.3}A transform pipeline}{31}{section.5.3}
\contentsline {chapter}{\numberline {6}Zippers and contexts and URI's, oh my!}{33}{chapter.6}
\contentsline {section}{\numberline {6.1}Zippers are not just for Bruno anymore}{33}{section.6.1}
\contentsline {section}{\numberline {6.2}Constructing contexts and zippers from data types}{33}{section.6.2}
\contentsline {section}{\numberline {6.3}Mapping URIs to zipper-based paths and back}{33}{section.6.3}
\contentsline {chapter}{\numberline {7}A review of collections as monads}{35}{chapter.7}
\contentsline {section}{\numberline {7.1}Monad as container}{35}{section.7.1}
\contentsline {section}{\numberline {7.2}Monads and take-out}{35}{section.7.2}
\contentsline {chapter}{\numberline {8}Domain model, storage and state}{37}{chapter.8}
\contentsline {section}{\numberline {8.1}Mapping our domain model to storage}{37}{section.8.1}
\contentsline {section}{\numberline {8.2}Storage and language-integrated query}{37}{section.8.2}
\contentsline {section}{\numberline {8.3}Continuations revisited}{37}{section.8.3}
\contentsline {chapter}{\numberline {9}Putting it all together}{39}{chapter.9}
\contentsline {section}{\numberline {9.1}Our web application end-to-end}{39}{section.9.1}
\contentsline {section}{\numberline {9.2}Deploying our application}{39}{section.9.2}
\contentsline {subsection}{\numberline {9.2.1}Why we are not deploying on GAE}{39}{subsection.9.2.1}
\contentsline {section}{\numberline {9.3}From one web application to web framework}{39}{section.9.3}
\contentsline {chapter}{\numberline {10}The semantic web}{41}{chapter.10}
\contentsline {section}{\numberline {10.1}How our web framework enables different kinds of application queries}{41}{section.10.1}
\contentsline {section}{\numberline {10.2}Searching for programs}{41}{section.10.2}
